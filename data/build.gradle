apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

android {
  def globalConfiguration = rootProject.extensions.getByName("ext")

  compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
  buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

  defaultConfig {
    minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
    targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
    versionCode globalConfiguration.getAt("androidVersionCode")
  }

  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  dexOptions {
    preDexLibraries false
  }

  // Avoid lint error validating Realm dependency
  lintOptions {
    ignore 'InvalidPackage'
  }
}

dependencies {
  def dataDependencies = rootProject.ext.dataDependencies
  def testDependencies = rootProject.ext.dataTestDependencies

  compile project(':domain')

  kapt dataDependencies.daggerCompiler
  provided dataDependencies.javaxAnnotation
  compile domainDependencies.kotlinStdLib
  compile dataDependencies.dagger
  compile dataDependencies.rxJava
  compile dataDependencies.rxAndroid
  compile dataDependencies.androidAnnotations
  compile dataDependencies.realm

  testCompile testDependencies.kotlinStdLib
  testCompile testDependencies.junitKotlin
  testCompile testDependencies.junit
  testCompile testDependencies.hamkrest
  testCompile testDependencies.robolectric

  testCompile testDependencies.powerMockitoJUnit
  testCompile testDependencies.powerMockitoRules
  testCompile testDependencies.powerMockito
  testCompile testDependencies.powerMockitoXStream
}
