allprojects {
  repositories {
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
  }
}

ext {

  compiler = [java  : JavaVersion.VERSION_1_7,
              kotlin: '1.0.5-2']

  android = [buildTools: '25.0.1',
             compileSdk: 24,
             minSdk    : 16,
             targetSdk : 24]

  build = [gradle       : '2.2.2',
           fabric       : '1.22.0',
           realm        : '2.2.1',
           playPublisher: '1.1.5']

  // Google Libraries
  supportVersion = '25.0.1'
  appCompatVersion = '25.0.1'
  recyclerViewVersion = '25.0.1'
  cardViewVersion = '25.0.1'
  designVersion = '25.0.1'
  androidAnnotationsVersion = '25.0.1'

  // Libraries
  crashlyticsVersion = '2.6.5'
  daggerVersion = '2.8'
  rxJavaVersion = '1.2.3'
  rxAndroidVersion = '1.2.1'
  javaxAnnotationVersion = '1.0'
  fabVersion = '1.6.4'
  zxingVersion = '3.3.0'
  zxingCoreVersion = '3.3.0'
  dexterVersion = '2.3.1'
  materialDialogsVersion = '0.9.1.0'
  materialDrawerVersion = '5.8.0'
  ankoVersion = '0.9'
  flowUpVersion = '0.1.9'

  // Testing
  robolectricVersion = '3.1.4'
  jUnitVersion = '4.12'
  assertJVersion = '1.7.1'
  mockitoVersion = '2.2.22'
  powerMockitoVersion = '1.6.6'
  hamkrestVersion = '1.2.3.0'

  buildPlugins = [gradle       : "com.android.tools.build:gradle:$build.gradle",
                  kotlin       : "org.jetbrains.kotlin:kotlin-gradle-plugin:$compiler.kotlin",
                  realm        : "io.realm:realm-gradle-plugin:$build.realm",
                  fabric       : "io.fabric.tools:gradle:$build.fabric",
                  playPublisher: "com.github.triplet.gradle:play-publisher:$build.playPublisher"]

  presentationDependencies = [kotlinStdLib   : "org.jetbrains.kotlin:kotlin-stdlib:$compiler.kotlin",
                              crashlytics    : "com.crashlytics.sdk.android:crashlytics:${crashlyticsVersion}@aar",
                              daggerCompiler : "com.google.dagger:dagger-compiler:${daggerVersion}",
                              dagger         : "com.google.dagger:dagger:${daggerVersion}",
                              rxJava         : "io.reactivex:rxjava:${rxJavaVersion}",
                              rxAndroid      : "io.reactivex:rxandroid:${rxAndroidVersion}",
                              javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
                              supportVersion : "com.android.support:support-v4:${supportVersion}",
                              appCompat      : "com.android.support:appcompat-v7:${appCompatVersion}",
                              design         : "com.android.support:design:${designVersion}",
                              recyclerView   : "com.android.support:recyclerview-v7:${recyclerViewVersion}",
                              fab            : "com.github.clans:fab:${fabVersion}",
                              dexter         : "com.karumi:dexter:${dexterVersion}",
                              zxingCore      : "com.google.zxing:core:${zxingCoreVersion}",
                              zxing          : "com.google.zxing:android-core:${zxingVersion}",
                              materialDialogs: "com.github.afollestad.material-dialogs:core:${materialDialogsVersion}",
                              materialDrawer : "com.mikepenz:materialdrawer:${materialDrawerVersion}@aar",
                              anko           : "org.jetbrains.anko:anko-sdk15:${ankoVersion}",
                              ankoSupport    : "org.jetbrains.anko:anko-support-v4:${ankoVersion}",
                              flowUp         : "io.flowup:android-sdk:${flowUpVersion}"]

  domainDependencies = [kotlinStdLib   : "org.jetbrains.kotlin:kotlin-stdlib:$compiler.kotlin",
                        daggerCompiler : "com.google.dagger:dagger-compiler:${daggerVersion}",
                        dagger         : "com.google.dagger:dagger:${daggerVersion}",
                        javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
                        rxJava         : "io.reactivex:rxjava:${rxJavaVersion}"]

  domainTestDependencies = [kotlinStdLib: "org.jetbrains.kotlin:kotlin-stdlib:$compiler.kotlin",
                            junitKotlin : "org.jetbrains.kotlin:kotlin-test-junit:$compiler.kotlin",
                            junit       : "junit:junit:${jUnitVersion}",
                            hamkrest    : "com.natpryce:hamkrest:${hamkrestVersion}",
                            mockito     : "org.mockito:mockito-core:${mockitoVersion}",]

  dataDependencies = [kotlinStdLib      : "org.jetbrains.kotlin:kotlin-stdlib:$compiler.kotlin",
                      daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
                      dagger            : "com.google.dagger:dagger:${daggerVersion}",
                      rxJava            : "io.reactivex:rxjava:${rxJavaVersion}",
                      rxAndroid         : "io.reactivex:rxandroid:${rxAndroidVersion}",
                      javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
                      androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}"]

  dataTestDependencies = [kotlinStdLib       : "org.jetbrains.kotlin:kotlin-stdlib:$compiler.kotlin",
                          junitKotlin        : "org.jetbrains.kotlin:kotlin-test-junit:$compiler.kotlin",
                          junit              : "junit:junit:${jUnitVersion}",
                          hamkrest           : "com.natpryce:hamkrest:${hamkrestVersion}",
                          mockito            : "org.mockito:mockito-core:${mockitoVersion}",
                          robolectric        : "org.robolectric:robolectric:${robolectricVersion}",
                          powerMockitoJUnit  : "org.powermock:powermock-module-junit4:${powerMockitoVersion}",
                          powerMockitoRules  : "org.powermock:powermock-module-junit4-rule:${powerMockitoVersion}",
                          powerMockito       : "org.powermock:powermock-api-mockito2:${powerMockitoVersion}",
                          powerMockitoXStream: "org.powermock:powermock-classloading-xstream:${powerMockitoVersion}"]
}